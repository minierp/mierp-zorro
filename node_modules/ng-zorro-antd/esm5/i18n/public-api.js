/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export { NzI18nModule } from './nz-i18n.module';
export { NZ_I18N } from './nz-i18n.token';
export { NzI18nService } from './nz-i18n.service';
export { default as ar_EG } from './languages/ar_EG';
export { default as bg_BG } from './languages/bg_BG';
export { default as ca_ES } from './languages/ca_ES';
export { default as cs_CZ } from './languages/cs_CZ';
export { default as de_DE } from './languages/de_DE';
export { default as el_GR } from './languages/el_GR';
export { default as en_GB } from './languages/en_GB';
export { default as en_US } from './languages/en_US';
export { default as es_ES } from './languages/es_ES';
export { default as et_EE } from './languages/et_EE';
export { default as fa_IR } from './languages/fa_IR';
export { default as fi_FI } from './languages/fi_FI';
export { default as fr_BE } from './languages/fr_BE';
export { default as fr_FR } from './languages/fr_FR';
export { default as is_IS } from './languages/is_IS';
export { default as it_IT } from './languages/it_IT';
export { default as ja_JP } from './languages/ja_JP';
export { default as ko_KR } from './languages/ko_KR';
export { default as nb_NO } from './languages/nb_NO';
export { default as nl_BE } from './languages/nl_BE';
export { default as nl_NL } from './languages/nl_NL';
export { default as pl_PL } from './languages/pl_PL';
export { default as pt_BR } from './languages/pt_BR';
export { default as pt_PT } from './languages/pt_PT';
export { default as ru_RU } from './languages/ru_RU';
export { default as sk_SK } from './languages/sk_SK';
export { default as sl_SI } from './languages/sl_SI';
export { default as sr_RS } from './languages/sr_RS';
export { default as sv_SE } from './languages/sv_SE';
export { default as th_TH } from './languages/th_TH';
export { default as tr_TR } from './languages/tr_TR';
export { default as uk_UA } from './languages/uk_UA';
export { default as vi_VN } from './languages/vi_VN';
export { default as zh_CN } from './languages/zh_CN';
export { default as zh_TW } from './languages/zh_TW';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQvIiwic291cmNlcyI6WyJpMThuL3B1YmxpYy1hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWxELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IE56STE4bk1vZHVsZSB9IGZyb20gJy4vbnotaTE4bi5tb2R1bGUnO1xuZXhwb3J0IHsgTlpfSTE4TiB9IGZyb20gJy4vbnotaTE4bi50b2tlbic7XG5leHBvcnQgeyBOekkxOG5TZXJ2aWNlIH0gZnJvbSAnLi9uei1pMThuLnNlcnZpY2UnO1xuZXhwb3J0IHsgTnpJMThuSW50ZXJmYWNlIH0gZnJvbSAnLi9uei1pMThuLmludGVyZmFjZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGFyX0VHIH0gZnJvbSAnLi9sYW5ndWFnZXMvYXJfRUcnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBiZ19CRyB9IGZyb20gJy4vbGFuZ3VhZ2VzL2JnX0JHJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgY2FfRVMgfSBmcm9tICcuL2xhbmd1YWdlcy9jYV9FUyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGNzX0NaIH0gZnJvbSAnLi9sYW5ndWFnZXMvY3NfQ1onO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBkZV9ERSB9IGZyb20gJy4vbGFuZ3VhZ2VzL2RlX0RFJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZWxfR1IgfSBmcm9tICcuL2xhbmd1YWdlcy9lbF9HUic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGVuX0dCIH0gZnJvbSAnLi9sYW5ndWFnZXMvZW5fR0InO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBlbl9VUyB9IGZyb20gJy4vbGFuZ3VhZ2VzL2VuX1VTJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZXNfRVMgfSBmcm9tICcuL2xhbmd1YWdlcy9lc19FUyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGV0X0VFIH0gZnJvbSAnLi9sYW5ndWFnZXMvZXRfRUUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBmYV9JUiB9IGZyb20gJy4vbGFuZ3VhZ2VzL2ZhX0lSJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZmlfRkkgfSBmcm9tICcuL2xhbmd1YWdlcy9maV9GSSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGZyX0JFIH0gZnJvbSAnLi9sYW5ndWFnZXMvZnJfQkUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBmcl9GUiB9IGZyb20gJy4vbGFuZ3VhZ2VzL2ZyX0ZSJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNfSVMgfSBmcm9tICcuL2xhbmd1YWdlcy9pc19JUyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGl0X0lUIH0gZnJvbSAnLi9sYW5ndWFnZXMvaXRfSVQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBqYV9KUCB9IGZyb20gJy4vbGFuZ3VhZ2VzL2phX0pQJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMga29fS1IgfSBmcm9tICcuL2xhbmd1YWdlcy9rb19LUic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIG5iX05PIH0gZnJvbSAnLi9sYW5ndWFnZXMvbmJfTk8nO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBubF9CRSB9IGZyb20gJy4vbGFuZ3VhZ2VzL25sX0JFJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbmxfTkwgfSBmcm9tICcuL2xhbmd1YWdlcy9ubF9OTCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHBsX1BMIH0gZnJvbSAnLi9sYW5ndWFnZXMvcGxfUEwnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwdF9CUiB9IGZyb20gJy4vbGFuZ3VhZ2VzL3B0X0JSJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcHRfUFQgfSBmcm9tICcuL2xhbmd1YWdlcy9wdF9QVCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHJ1X1JVIH0gZnJvbSAnLi9sYW5ndWFnZXMvcnVfUlUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBza19TSyB9IGZyb20gJy4vbGFuZ3VhZ2VzL3NrX1NLJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc2xfU0kgfSBmcm9tICcuL2xhbmd1YWdlcy9zbF9TSSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHNyX1JTIH0gZnJvbSAnLi9sYW5ndWFnZXMvc3JfUlMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBzdl9TRSB9IGZyb20gJy4vbGFuZ3VhZ2VzL3N2X1NFJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdGhfVEggfSBmcm9tICcuL2xhbmd1YWdlcy90aF9USCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHRyX1RSIH0gZnJvbSAnLi9sYW5ndWFnZXMvdHJfVFInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1a19VQSB9IGZyb20gJy4vbGFuZ3VhZ2VzL3VrX1VBJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmlfVk4gfSBmcm9tICcuL2xhbmd1YWdlcy92aV9WTic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHpoX0NOIH0gZnJvbSAnLi9sYW5ndWFnZXMvemhfQ04nO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB6aF9UVyB9IGZyb20gJy4vbGFuZ3VhZ2VzL3poX1RXJztcbiJdfQ==